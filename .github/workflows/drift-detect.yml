name: Detect Drift

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  drift:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan (Detect Drift)
        run: terraform plan -no-color -out=tfplan

      - name: Export Plan to JSON
        run: terraform show -json tfplan > plan.json

      - name: Apply Plan Changes to Code (v1)
        run: python3 scripts/apply_plan_to_code.py plan.json

      - name: Check for .tf changes
        id: diff
        run: |
          if git diff --quiet -- '*.tf'; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create PR with code updates
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_TOKEN }}  # PAT with repo scope
          commit-message: "Drift â†’ code (v1): synchronize Terraform to plan changes"
          title: "Drift detected: sync Terraform code to plan (v1)"
          body: |
            This PR auto-updates `.tf` files to match drifted attributes detected in AWS.
            v1 scope: scalars, flat lists/maps. Skips nested blocks & var/local/module-derived expressions.
          branch: "drift-${{ github.run_id }}"
          add-paths: |
            **/*.tf
